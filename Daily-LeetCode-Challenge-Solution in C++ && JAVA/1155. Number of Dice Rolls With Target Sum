1155. Number of Dice Rolls With Target Sum



26 Dec 2023


Medium


C++:


// TOP Down


class Solution {
public:
    int numRollsToTarget(int n, int k, int target) {
        vector<vector<int>> memo(n+1 , vector<int>(target+1 , -1));
        int mod = 1e9+7;
        return helper(n , k , target , memo , mod);
    }
    int helper(int n , int k , int target , vector<vector<int>>& memo , int mod){
        if(n == 0 && target == 0) return 1;
        if(n == 0 || target <= 0) return 0;
        if(memo[n][target] != -1) return memo[n][target];
        int ways = 0;
        for(int face = 1; face <= k ; face++){
            ways = (ways + helper(n - 1 , k , target - face , memo , mod))%mod;
        }
        memo[n][target] = ways;
        return ways;
    } 
}; 


// Bottom UP


#include <vector>
using namespace std;

class Solution {
public:
    int numRollsToTarget(int n, int k, int target) {
        int mod = 1e9 + 7;
        vector<vector<int>> dp(n + 1, vector<int>(target + 1, 0));
        dp[0][0] = 1;  // There is 1 way to roll 0 dice to get sum 0
        for (int i = 1; i <= n; ++i) {
            for (int j = 1; j <= target; ++j) {
                for (int x = 1; x <= k && x <= j; ++x) {
                    dp[i][j] = (dp[i][j] + dp[i - 1][j - x]) % mod;
                }
            }
        }
        return dp[n][target];
    }
};
