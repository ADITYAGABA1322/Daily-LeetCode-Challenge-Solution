# Daily-LeetCode-Challenge-Solution

2306. Naming a Company

9 Feb 2023

Hard

C++:

// Time Complexity : O(n) where n is the length of the string s and space complexity is O(1)

class Solution {
public:
    long long distinctNames(vector<string>& ideas) {
        unordered_set<string> count[26];
        for(auto& s : ideas){
            count[s[0] - 'a'].insert(s.substr(1));
        }
        long long res = 0;
        for(int i=0; i<26; i++){
            for(int j=i+1; j<26; j++){
                long long c1 = 0L , c2  = 0L;
                for(auto& c : count[i]){
                    if(! count[j].count(c)) c1++;
                }
                for(auto& c : count[j]){
                    if(!count[i].count(c)) c2++;
                }
                res += c1*c2;
            }
        }
        return res*2;
    }
};


Java:


// Time Complexity : O(n) where n is the length of the string s and space complexity is O(1)

class Solution {
    public long distinctNames(String[] ideas) {
        Set<String>[] count = new HashSet[26];
        for(int i=0; i<26; i++){
            count[i] = new HashSet<>();
        }
        for(String s : ideas){
            count[s.charAt(0) - 'a'].add(s.substring(1));
        }
        long res = 0;
        for(int i=0; i<26; i++){
            for(int j=i+1; j<26; j++){
                long c1 = 0L, c2 = 0L;
                for(String c : count[i]){
                    if(!count[j].contains(c)) c1++;
                }
                for(String c : count[j]){
                    if(!count[i].contains(c)) c2++;
                }
                res += c1*c2;
            }
        }
        return res*2;
    }
} 


