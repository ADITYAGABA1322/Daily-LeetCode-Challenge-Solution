# Daily-LeetCode-Challenge-Solution

472. Concatenated Words

27 Jan 2023

Hard

// Time complexity: O(M^3.N) and Space complexity : O(N.M)

C++:

// Time complexity: O(M^3.N) and Space complexity : O(N.M)

class Solution {
public:
    vector<string> findAllConcatenatedWordsInADict(vector<string>& words) {
        unordered_set<string> dictionary(words.begin() , words.end());
        vector<string> answer;
        for(const auto word : words){
            const int length = word.length();
            vector<bool> dp(length + 1);
            dp[0] = true;
            for(int i=1; i<=length; i++){
                for(int j = (i == length ? 1 : 0) ; !dp[i] && j<i; j++){
                    dp[i] = dp[j] && dictionary.count(word.substr(j , i-j));
                }
            }
            if(dp[length]){
                answer.push_back(word);
            }
        }
        return answer;
    }
};



Java:


// Time complexity: O(M^3.N) and Space complexity : O(N.M)
class Solution {
    public List<String> findAllConcatenatedWordsInADict(String[] words) {
        Set<String> dictionary = new HashSet<>(Arrays.asList(words));
        List<String> answer = new ArrayList<>();
        for(String word : words){
            int length = word.length();
            boolean[] dp = new boolean[length + 1];
            dp[0] = true;
            for(int i=1; i<=length; i++){
                for(int j = (i == length ? 1:0) ; !dp[i] && j<i; j++){
                    dp[i] = dp[j] && dictionary.contains(word.substring(j , i));
                }
            } 
            if(dp[length]){
                answer.add(word);
            }
       }
       return answer;
    }
}




